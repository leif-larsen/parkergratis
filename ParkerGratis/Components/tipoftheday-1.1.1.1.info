{"Name":"Tip of the Day","Id":1318,"Alias":"tipoftheday","Description":"`TipOfTheDay` shows a useful tip about using your app on a daily basis.\n\n### Showing a tip of the day on iOS\n\nCreate a provider for your tips:\n\n```csharp\nusing TipOfTheDay;\n...\n\npublic class HealthyTipsProvider : ITipsProvider\n{\n  static readonly string[] Tips = {\n    \"Brush your teeth twice daily\",\n    \"Take a five-minute break from your computer every hour or two\"\n  };\n\n  public string GetTip (int index)\n  {\n    return Tips[index];\n  }\n\n  public int TipsCount {\n    get { return Tips.Length; }\n  }\n}\n```\n\nThen add a single line to your `AppDelegate` to show tips on launch:\n\n```csharp\nusing TipOfTheDay;\n...\n\npublic partial class AppDelegate : UIApplicationDelegate\n{\n  UIWindow window;\n  ...\n\n  public override bool FinishedLaunching (UIApplication app, NSDictionary options)\n  {\n    ...\n    TipOfTheDayControl\u003cHealthyTipsProvider\u003e.Show (window);\n    return true;\n  }\n}\n``` \n\n### Showing a tip of the day on Android\n\nOn Android, your `ITipsProvider` must also implement `IContextInitializable`:\n\n```csharp\nusing TipOfTheDay;\n...\n\npublic class HealthyTipsProvider : ITipsProvider, IContextInitializable\n{\n  static string[] Tips = {\n\t\t\"Brush your teeth twice daily\",\n\t\t\"Take a five-minute break from your computer every hour or two\"\n\t};\n\n  // This will be called before GetTip and TipsCount are.\n  public void Initialize (Context context)\n  {\n\t\t// Load your tips from disk, network, resource file, etc.\n\t\t...\n  }\n\n  public string GetTip (int index)\n  {\n    return Tips[index];\n  }\n\n  public int TipsCount {\n    get { return Tips.Length; }\n  }\n}\n```\n\nThen call `Activate` from your main activity\u0027s `OnCreate` method:\n\n```csharp\nusing TipOfTheDay;\n...\n\n[Activity (MainLauncher = true)]\npublic class MainActivity : Activity\n{\n\n  protected override void OnCreate (Bundle bundle)\n  {\n    ...\n    TipOfTheDayControl\u003cHealthyTipsProvider\u003e.Activate (this);\n  }\n}\n```\n\n*Screenshot assembled with [PlaceIt](http://placeit.breezi.com/).*\n","Version":"1.1.1.1","Summary":"Shows a useful daily tip when your app is launched.","QuickStart":"`TipOfTheDay` shows a useful tip about using your app on a daily basis.\n\n## Examples\n\n### Showing a tip of the day on iOS\n\nCreate a provider for your tips:\n\n```csharp\nusing TipOfTheDay;\n...\n\npublic class HealthyTipsProvider : ITipsProvider\n{\n  static readonly string[] Tips = {\n    \"Brush your teeth twice daily\",\n    \"Take a five-minute break from your computer every hour or two\"\n  };\n\n  public string GetTip (int index)\n  {\n    return Tips[index];\n  }\n\n  public int TipsCount {\n    get { return Tips.Length; }\n  }\n}\n```\n\nThen add a single line to your `AppDelegate` to show tips on launch:\n\n```csharp\nusing TipOfTheDay;\n...\n\npublic partial class AppDelegate : UIApplicationDelegate\n{\n  UIWindow window;\n  ...\n\n  public override bool FinishedLaunching (UIApplication app, NSDictionary options)\n  {\n    ...\n    TipOfTheDayControl\u003cHealthyTipsProvider\u003e.Show (window);\n    return true;\n  }\n}\n``` \nSet whether the tip is shown at startup (setting this to `false` will\ncause `Show` to do nothing):\n\n```csharp\nTipOfTheDayControl.ShowAtStartup = false;\n```\n\n### Showing a tip of the day on Android\n\nOn Android, your `ITipsProvider` must also implement `IContextInitializable`:\n\n```csharp\nusing TipOfTheDay;\n...\n\npublic class HealthyTipsProvider : ITipsProvider, IContextInitializable\n{\n  static string[] Tips = {\n\t\t\"Brush your teeth twice daily\",\n\t\t\"Take a five-minute break from your computer every hour or two\"\n\t};\n\n  // This will be called before GetTip and TipsCount are.\n  public void Initialize (Context context)\n  {\n\t\t// Load your tips from disk, network, resource file, etc.\n\t\t...\n  }\n\n  public string GetTip (int index)\n  {\n    return Tips[index];\n  }\n\n  public int TipsCount {\n    get { return Tips.Length; }\n  }\n}\n```\n\nThen call `Activate` from your main activity\u0027s `OnCreate` method:\n\n```csharp\nusing TipOfTheDay;\n...\n\n[Activity (MainLauncher = true)]\npublic class MainActivity : Activity\n{\n\n  protected override void OnCreate (Bundle bundle)\n  {\n    ...\n    TipOfTheDayControl\u003cHealthyTipsProvider\u003e.Activate (this);\n  }\n}\n```\n\nTo enable or to disable the tip. (a `Context` is needed to save the\nsetting):\n\n```csharp\nbool enabled = TipOfTheDayControl.IsEnabled (context);\nTipOfTheDayControl.Enable (context);\nTipOfTheDayControl.Disable (context);\n```\n\nTo force showing the tip from any part of your app:\n\n```csharp\nTipOfTheDayControl\u003cHealthyTipsProvider\u003e.ForceActivate (context);\n```\n\n### Further Customization\n\nTo customize the tip screen, implement `ITipsSettings`:\n\n```csharp\npublic class HealthyTipsSettings : ITipsSettings\n{\n  public string QuitButtonText {\n    get { return \"Namaste\"; }\n  }\n\n  public string ShowAtStartupText {\n    get { return \"Keep me healthy\"; }\n  }\n\n  public string TitleText {\n    get { return \"Healthy Tip of the Day\"; }\n  }\n}\n```\n\nThen show your customized tip of the day with:\n\n```csharp\n// On iOS\nTipOfTheDayControl\u003cHealthyTipsProvider, HealthyTipsSettings\u003e.Show (window);\n\n// On Android\nTipOfTheDayControl\u003cHealthyTipsProvider, HealthyTipsSettings\u003e.Activate (context);\n``` \n","Hash":"954ec960b6d285ce339537b74390a89f","TargetPlatforms":["ios","android"],"TrialHash":null}